{"version":3,"sources":["components/applicantCard/index.jsx","components/Modal/index.jsx","components/Form/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ApplicationCard","props","className","src","img","alt","firstName","lastName","occupation","ssn","onClick","linkUpdateForm","id","showModal","Modal","this","show","children","removeApplicant","onClose","React","Component","Form","value","name","onChange","handleInputChange","type","placeholder","sortForUpdate","showHome","Applicant","state","applicants","form","home","setState","e","showForm","filter","applicant","newApplicant","newId","length","event","preventDefault","map","updatedCard","updateCard","push","console","log","addApplicant","newApplicants","concat","target","style","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44e92db1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n// Application card will display the applicants in a uniform way\r\nfunction ApplicationCard(props) { // props from app.js will provide data to fill the cards\r\n    return (\r\n        // card to hold the information in\r\n        <div className=\"card\">\r\n\r\n            <img src={props.img} alt=\"applicants image\" />\r\n\r\n            <div className=\"info\">\r\n                <ul>\r\n                    {/* passing in props(the information passed down from app.js) */}\r\n                    <li>First Name: {props.firstName}</li>\r\n                    <li>Last Name: {props.lastName}</li>\r\n                    <li>Occupation: {props.occupation}</li>\r\n                    <li>SSN: {props.ssn}</li>\r\n                </ul>\r\n\r\n\r\n\r\n                <button className=\"cardBtn\" onClick={() => props.linkUpdateForm(props)}>Update</button>\r\n\r\n\r\n\r\n                <button className=\"cardBtn\" onClick={id => props.showModal(props.id, props.firstName)}> Remove</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationCard;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\nclass Modal extends React.Component {\r\n  render(props) {\r\n      // this will not render the component if the state is false\r\n        if(!this.props.show){\r\n            return null;\r\n        }\r\n    return (\r\n      <div className=\"modal\" id=\"modal\">\r\n        <div className=\"content\">{this.props.children}</div>\r\n        <div className=\"actions\">\r\n        <button onClick={() => this.props.removeApplicant()}>remove</button>\r\n        <button onClick={() => this.props.onClose()}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Modal","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./style.css\"\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <>\r\n            <form className=\"form\">\r\n                <input\r\n                    value={props.firstName}\r\n                    name=\"firstName\"\r\n                    onChange={props.handleInputChange}\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                />\r\n                <input\r\n                    value={props.lastName}\r\n                    name=\"lastName\"\r\n                    onChange={props.handleInputChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                />\r\n                <input\r\n                    value={props.occupation}\r\n                    name=\"occupation\"\r\n                    onChange={props.handleInputChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Occupation\"\r\n                />\r\n                <input\r\n                    value={props.ssn}\r\n                    name=\"ssn\"\r\n                    onChange={props.handleInputChange}\r\n                    type=\"number\"\r\n                    placeholder=\"SSN\"\r\n                />\r\n                <input\r\n                    value={props.img}\r\n                    name=\"img\"\r\n                    onChange={props.handleInputChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Image URL(Optional)\"\r\n                />\r\n\r\n                <button className=\"btn\"\r\n                    onClick={props.sortForUpdate}\r\n                >update/add</button>\r\n            </form>\r\n            <button className=\"btn\" onClick={props.showHome}>Cancel</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form","import './App.css';\nimport React, { Component } from \"react\";\nimport applicants from \"./applicants.json\"\nimport ApplicationCard from \"./components/applicantCard\"\nimport Modal from \"./components/Modal\"\nimport { Link } from \"react-router-dom\"\nimport Form from \"./components/Form\"\n\n\nclass Applicant extends React.Component {\n  // Setting the state \n  state = {\n    applicants,     // applicants in the applicant json file\n    show: false,    //to show the modal or not\n    id: null,    // recieves id of the applicant selected to be removed\n    firstName: \"\", // recieves name of the applicant selected to be removed\n    lastName: \"\",\n    occupation: \"\",\n    ssn: \"\",\n    img: \"https://militaryhealthinstitute.org/wp-content/uploads/sites/37/2019/10/blank-person-icon-9.jpg\",\n    form: \"none\",\n    home: \"inline\"\n  };\n  // ------------------------this is the modal--------------------------------//\n  showModal = (id, firstName) => {\n    this.setState({\n      show: true,     // set modal to true so the modal shows\n      id: id,     // sets id of the applicant clicked\n      firstName: firstName\n    });\n  };\n  onClose = e => {\n    this.setState({\n      show: false   // set modal to false to hide it\n    });\n  };\n  //------------------------- Shows the form or the homepage-------------------->\n  showForm = e => {\n    this.setState({\n      form: \"inline\",\n      home: \"none\"\n    })\n  };\n  showHome = e => {\n    this.setState({\n      form: \"none\",\n      home: \"block\"\n    })\n  };\n\n  //----------------------------------remove applicant-------------------------//\n  removeApplicant = e => {\n    // filtering through the applicants id's, and showing only the id's not equal to the applicants removed.\n    const applicants = this.state.applicants.filter(applicant => applicant.id !== this.state.id);\n    // this will set the state to the new filtered array we have above\n    this.setState({ applicants })\n    this.onClose()  // call the onClose function to close the modal after removing applicant.\n  };\n\n  //-------------------------links the update button to the form page------------->\n  linkUpdateForm = props => {\n    this.setState({\n      id: props.id,\n      firstName: props.firstName,\n      lastName: props.lastName,\n      occupation: props.occupation,\n      ssn: props.ssn,\n      img: props.img\n    }, () => {\n      this.showForm()\n    });\n  };\n\n  //---------------------------------Form Update and Add functions---------------------// \n  newApplicant = e => {\n    let newId = this.state.applicants.length + 1\n    this.setState({     // resets inputs so user can put in new applicant\n      id: newId,\n      firstName: \"\",\n      lastName: \"\",\n      occupation: \"\",\n      ssn: \"\",\n      img: \"https://militaryhealthinstitute.org/wp-content/uploads/sites/37/2019/10/blank-person-icon-9.jpg\",\n    })\n    this.showForm()\n  };\n  sortForUpdate = event => {\n    event.preventDefault();\n    this.state.applicants.map(applicant =>\n    {  let updatedCard= []\n     if(this.state.id !== applicant.id){\n      // this.addApplicant()\n      }if(this.state.id === applicant.id) {\n        const updateCard = {...applicant}\n        updateCard.firstName = this.state.firstName;\n        updateCard.lastName = this.state.lastName;\n        updateCard.occupation = this.state.occupation\n        updateCard.ssn = this.state.ssn\n        updateCard.img = this.state.img\n\n        updatedCard.push(updateCard)\n\n        this.setState({\n          applicant: updatedCard\n        }, () => {\n          console.log(\"this should be the state\", applicant);\n        });\n      }\n    })\n  }\n  addApplicant = e => {\n    // e.preventDefault();\n    const newApplicants = this.state.applicants.concat(\n      [{\n        id: this.state.applicants.length + 1,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        occupation: this.state.occupation,\n        ssn: this.state.ssn,\n        img: this.state.img\n      }])\n    \n\n    this.setState({ applicants: newApplicants }, () => {\n      // console.log(\"this should be the state\", this.state.applicants);\n    });\n    \n    this.showHome()\n  }\n\n\n\n  //this function allows the input to update immediately \n  handleInputChange = e => {\n    // getting the value and name of the input that caused the change\n    const { name, value } = e.target;\n    // setting state to the new values\n    this.setState({\n      [name]: value\n    });\n  }\n\n\n  //This will bring all the components together and render them on the browser\n  render() {\n    return (\n      <>\n        <h1>Applicants for Roostify</h1>\n        <div style={{ display: this.state.home }}>\n          {/* passing information to the modal, so the modal can access these functions  */}\n          <Modal\n            onClose={this.onClose}\n            show={this.state.show}    // sends the show state to the modal page\n            removeApplicant={this.removeApplicant}  // passes the removeapplicant function\n          >Are you sure you would like to remove {this.state.firstName} from the list?</Modal>\n\n          {/* Run through all the tasks I set inside it for every applicant in the json*/}\n          {this.state.applicants.map(applicant =>\n            <ApplicationCard    // sending information to the application card file through props\n              id={applicant.id}\n              firstName={applicant.firstName}\n              lastName={applicant.lastName}\n              occupation={applicant.occupation}\n              ssn={applicant.ssn}\n              img={applicant.img}\n              showModal={this.showModal}              // passes the showmodal function\n              linkUpdateForm={this.linkUpdateForm}  // passes the update applicant function              \n            />\n          )}\n\n          <button className=\"btn\" onClick={this.newApplicant}>Add Applicant</button>   {/* this button will show you the form */}\n        </div>\n\n        <div style={{ display: this.state.form }}>\n          <Form\n            firstName={this.state.firstName}\n            lastName={this.state.lastName}\n            occupation={this.state.occupation}\n            ssn={this.state.ssn}\n            img={this.state.img}\n            handleInputChange={this.handleInputChange}\n            sortForUpdate={this.sortForUpdate}\n            showHome={this.showHome}\n          />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Applicant;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}